package gui;

import hotel.Habitacion;
import hotel.Huesped;
import hotel.Persona;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import registro.conexion;

public class registroMenu extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form NewJFrame
     */
    public registroMenu() {
        initComponents();
        /**
         * Coloca la pestaña en el centro de la pantalla al iniciar
         */
        this.setLocationRelativeTo(null);
        /**
         * Icono de aplicación
         */
        setIconImage(new ImageIcon(getClass().getResource("/Logo/faroLogo.png")).getImage());
        /**
         * Provoca que el segúndo tab del frame este desabilitado
         */
        registroCliente.setEnabledAt(1, false);
        /**
         * Provoca que el tercer tab del frame este desabilitado
         */
        registroCliente.setEnabledAt(2, false);
        /**
         * Provoca que el cuarto tab del frame este desabilitado
         */
        registroCliente.setEnabledAt(3, false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        registroCliente = new javax.swing.JTabbedPane();
        informacionClientePane = new javax.swing.JPanel();
        radioEmpresa = new javax.swing.JRadioButton();
        radioParticular = new javax.swing.JRadioButton();
        radioFemenino = new javax.swing.JRadioButton();
        radioMasculino = new javax.swing.JRadioButton();
        txtRutPasaporte = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtEdad = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        listPaises = new javax.swing.JComboBox<>();
        labelCodigoP = new javax.swing.JLabel();
        labelPais = new javax.swing.JLabel();
        labelTelefono = new javax.swing.JLabel();
        labelCorreoElectronico = new javax.swing.JLabel();
        labelTipoCliente = new javax.swing.JLabel();
        labelSexo = new javax.swing.JLabel();
        labelEdad = new javax.swing.JLabel();
        labelRut = new javax.swing.JLabel();
        labelApellidoCliente = new javax.swing.JLabel();
        labelNombre = new javax.swing.JLabel();
        logoTrans3 = new javax.swing.JLabel();
        butMinimizarIngre1 = new javax.swing.JButton();
        butCerrarIngre1 = new javax.swing.JButton();
        listAcompanante = new javax.swing.JComboBox<>();
        butCancelarRegistro = new javax.swing.JButton();
        butSiguiente1 = new javax.swing.JButton();
        habitacionPane = new javax.swing.JPanel();
        logoTrans4 = new javax.swing.JLabel();
        butMinimizarIngre3 = new javax.swing.JButton();
        butCerrarIngre3 = new javax.swing.JButton();
        butSiguiente2 = new javax.swing.JButton();
        butCancelarRegistro1 = new javax.swing.JButton();
        butAtras = new javax.swing.JButton();
        labelHabitacion1 = new javax.swing.JLabel();
        imageHabitacion1 = new javax.swing.JLabel();
        labelInfoH1 = new javax.swing.JLabel();
        labelContenidoH1 = new javax.swing.JLabel();
        labelInicio1 = new javax.swing.JLabel();
        labelTermino1 = new javax.swing.JLabel();
        radioSelectH1 = new javax.swing.JRadioButton();
        labelHabitacion2 = new javax.swing.JLabel();
        imageHabitacion2 = new javax.swing.JLabel();
        labelInfoH2 = new javax.swing.JLabel();
        labelContenidoH2 = new javax.swing.JLabel();
        labelInicio2 = new javax.swing.JLabel();
        labelTermino2 = new javax.swing.JLabel();
        radioSelectH2 = new javax.swing.JRadioButton();
        labelHabitacion3 = new javax.swing.JLabel();
        imageHabitacion3 = new javax.swing.JLabel();
        labelInfoH3 = new javax.swing.JLabel();
        labelContenidoH3 = new javax.swing.JLabel();
        labelInicio3 = new javax.swing.JLabel();
        labelTermino3 = new javax.swing.JLabel();
        radioSelectH3 = new javax.swing.JRadioButton();
        labelHabitacion4 = new javax.swing.JLabel();
        imageHabitacion4 = new javax.swing.JLabel();
        labelInfoH4 = new javax.swing.JLabel();
        labelContenidoH4 = new javax.swing.JLabel();
        labelInicio4 = new javax.swing.JLabel();
        labelTermino4 = new javax.swing.JLabel();
        radioSelectH4 = new javax.swing.JRadioButton();
        jdcInicioH1 = new com.toedter.calendar.JDateChooser();
        jdcInicioH2 = new com.toedter.calendar.JDateChooser();
        jdcInicioH3 = new com.toedter.calendar.JDateChooser();
        jdcInicioH4 = new com.toedter.calendar.JDateChooser();
        jdcTerminoH1 = new com.toedter.calendar.JDateChooser();
        jdcTerminoH2 = new com.toedter.calendar.JDateChooser();
        jdcTerminoH3 = new com.toedter.calendar.JDateChooser();
        jdcTerminoH4 = new com.toedter.calendar.JDateChooser();
        serviciosPane = new javax.swing.JPanel();
        labelNombreS4 = new javax.swing.JLabel();
        imageServicio4 = new javax.swing.JLabel();
        informacionS4 = new javax.swing.JLabel();
        descripcionS4 = new javax.swing.JLabel();
        descripcionS4_1 = new javax.swing.JLabel();
        radioServicio4 = new javax.swing.JRadioButton();
        labelNombreS3 = new javax.swing.JLabel();
        imageServicio3 = new javax.swing.JLabel();
        informacionS3 = new javax.swing.JLabel();
        descripcionS3_1 = new javax.swing.JLabel();
        descripcionS3 = new javax.swing.JLabel();
        radioServicio3 = new javax.swing.JRadioButton();
        labelNombreS2 = new javax.swing.JLabel();
        imageServicio2 = new javax.swing.JLabel();
        informacionS2 = new javax.swing.JLabel();
        descripcionS2 = new javax.swing.JLabel();
        radioServicio2 = new javax.swing.JRadioButton();
        radioServicio1 = new javax.swing.JRadioButton();
        descripcionS1_1 = new javax.swing.JLabel();
        descripcionS1 = new javax.swing.JLabel();
        informacionS1 = new javax.swing.JLabel();
        labelNombreS1 = new javax.swing.JLabel();
        imageServicio1 = new javax.swing.JLabel();
        logoTrans1 = new javax.swing.JLabel();
        butMinimizarIngre4 = new javax.swing.JButton();
        butCerrarIngre4 = new javax.swing.JButton();
        butSiguiente3 = new javax.swing.JButton();
        butCancelarRegistro2 = new javax.swing.JButton();
        butAtras1 = new javax.swing.JButton();
        descripcionS5 = new javax.swing.JLabel();
        confirmacionPane = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDatos = new javax.swing.JTextPane();
        butImprimirBoleta = new javax.swing.JButton();
        logoTrans = new javax.swing.JLabel();
        butMinimizarIngre5 = new javax.swing.JButton();
        butCerrarIngre5 = new javax.swing.JButton();
        butCancelarRegistro3 = new javax.swing.JButton();
        butAtras2 = new javax.swing.JButton();
        burModificarCliente = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        butRegistrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        registroCliente.setBackground(new java.awt.Color(49, 61, 83));
        registroCliente.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(247, 207, 102)));
        registroCliente.setForeground(new java.awt.Color(255, 255, 255));
        registroCliente.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        registroCliente.setToolTipText("");
        registroCliente.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        registroCliente.setName(""); // NOI18N
        registroCliente.setOpaque(true);

        informacionClientePane.setBackground(new java.awt.Color(49, 61, 83));
        informacionClientePane.setForeground(new java.awt.Color(49, 61, 83));
        informacionClientePane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                informacionClientePaneMouseDragged(evt);
            }
        });
        informacionClientePane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                informacionClientePaneMousePressed(evt);
            }
        });

        radioEmpresa.setForeground(new java.awt.Color(153, 153, 153));
        radioEmpresa.setText("Empresa");
        radioEmpresa.setContentAreaFilled(false);
        radioEmpresa.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        radioEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioEmpresaActionPerformed(evt);
            }
        });

        radioParticular.setForeground(new java.awt.Color(153, 153, 153));
        radioParticular.setText("Particular");
        radioParticular.setContentAreaFilled(false);
        radioParticular.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        radioParticular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioParticularActionPerformed(evt);
            }
        });

        radioFemenino.setForeground(new java.awt.Color(153, 153, 153));
        radioFemenino.setText("Femenino");
        radioFemenino.setContentAreaFilled(false);
        radioFemenino.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        radioFemenino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioFemeninoActionPerformed(evt);
            }
        });

        radioMasculino.setForeground(new java.awt.Color(153, 153, 153));
        radioMasculino.setText("Masculino");
        radioMasculino.setContentAreaFilled(false);
        radioMasculino.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        radioMasculino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMasculinoActionPerformed(evt);
            }
        });

        txtRutPasaporte.setBackground(new java.awt.Color(255, 255, 255));

        txtApellido.setBackground(new java.awt.Color(255, 255, 255));

        txtNombre.setBackground(new java.awt.Color(255, 255, 255));

        txtEdad.setBackground(new java.awt.Color(255, 255, 255));

        txtCorreo.setBackground(new java.awt.Color(255, 255, 255));

        txtTelefono.setBackground(new java.awt.Color(255, 255, 255));

        listPaises.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Afganistán", "Albania", "Alemania", "Andorra", "Angola", "Antigua y Barbuda", "Arabia Saudita", "Argelia", "Argentina", "Armenia", "Australia", "Austria", "Azerbaiyán", "Bahamas", "Bangladés", "Barbados", "Baréin", "Bélgica", "Belice", "Benín", "Bielorrusia", "Birmania", "Bolivia", "Bosnia y Herzegovina", "Botsuana", "Brasil", "Brunéi", "Bulgaria", "Burkina Faso", "Burundi", "Bután", "Cabo Verde", "Camboya", "Camerún", "Canadá", "Catar", "Chad", "Chile", "China", "Chipre", "Ciudad del Vaticano", "Colombia", "Comoras", "Corea del Norte", "Corea del Sur", "Costa de Marfil", "Costa Rica", "Croacia", "Cuba", "Dinamarca", "Dominica", "Ecuador", "Egipto", "El Salvador", "Emiratos Árabes Unidos", "Eritrea", "Eslovaquia", "Eslovenia", "España", "Estados Unidos", "Estonia", "Etiopía", "Filipinas", "Finlandia", "Fiyi", "Francia", "Gabón", "Gambia", "Georgia", "Ghana", "Granada", "Grecia", "Guatemala", "Guyana", "Guinea", "Guinea ecuatorial", "Guinea-Bisáu", "Haití", "Honduras", "Hungría", "India", "Indonesia", "Irak", "Irán", "Irlanda", "Islandia", "Islas Marshall", "Islas Salomón", "Israel", "Italia", "Jamaica", "Japón", "Jordania", "Kazajistán", "Kenia", "Kirguistán", "Kiribati", "Kuwait", "Laos", "Lesoto", "Letonia", "Líbano", "Liberia", "Libia", "Liechtenstein", "Lituania", "Luxemburgo", "Macedonia del Norte", "Madagascar", "Malasia", "Malaui", "Maldivas", "Malí", "Malta", "Marruecos", "Mauricio", "Mauritania", "México", "Micronesia", "Moldavia", "Mónaco", "Mongolia", "Montenegro", "Mozambique", "Namibia", "Nauru", "Nepal", "Nicaragua", "Níger", "Nigeria", "Noruega", "Nueva Zelanda", "Omán", "Países Bajos", "Pakistán", "Palaos", "Panamá", "Papúa Nueva Guinea", "Paraguay", "Perú", "Polonia", "Portugal", "Reino Unido", "República Centroafricana", "República Checa", "República del Congo", "República Democrática del Congo", "República Dominicana", "Ruanda", "Rumanía", "Rusia", "Samoa", "San Cristóbal y Nieves", "San Marino", "San Vicente y las Granadinas", "Santa Lucía", "Santo Tomé y Príncipe", "Senegal", "Serbia", "Seychelles", "Sierra Leona", "Singapur", "Siria", "Somalia", "Sri Lanka", "Suazilandia", "Sudáfrica", "Sudán", "Sudán del Sur", "Suecia", "Suiza", "Surinam", "Tailandia", "Tanzania", "Tayikistán", "Timor Oriental", "Togo", "Tonga", "Trinidad y Tobago", "Túnez", "Turkmenistán", "Turquía", "Tuvalu", "Ucrania", "Uganda", "Uruguay", "Uzbekistán", "Vanuatu", "Venezuela", "Vietnam", "Yemen", "Yibuti", "Zambia", "Zimbabue" }));
        listPaises.setSelectedIndex(37);
        listPaises.setToolTipText("");
        listPaises.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        labelCodigoP.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labelCodigoP.setForeground(new java.awt.Color(255, 255, 255));
        labelCodigoP.setText("Acompañantes:");

        labelPais.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labelPais.setForeground(new java.awt.Color(255, 255, 255));
        labelPais.setText("Pais:");

        labelTelefono.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labelTelefono.setForeground(new java.awt.Color(255, 255, 255));
        labelTelefono.setText("Telefono:");

        labelCorreoElectronico.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labelCorreoElectronico.setForeground(new java.awt.Color(255, 255, 255));
        labelCorreoElectronico.setText("Correo Electronico:");

        labelTipoCliente.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labelTipoCliente.setForeground(new java.awt.Color(255, 255, 255));
        labelTipoCliente.setText("Tipo Huesped:");

        labelSexo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labelSexo.setForeground(new java.awt.Color(255, 255, 255));
        labelSexo.setText("Sexo:");

        labelEdad.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labelEdad.setForeground(new java.awt.Color(255, 255, 255));
        labelEdad.setText("Edad:");

        labelRut.setBackground(new java.awt.Color(255, 255, 255));
        labelRut.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labelRut.setForeground(new java.awt.Color(255, 255, 255));
        labelRut.setText("Rut / Pasaporte:");

        labelApellidoCliente.setBackground(new java.awt.Color(255, 255, 255));
        labelApellidoCliente.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labelApellidoCliente.setForeground(new java.awt.Color(255, 255, 255));
        labelApellidoCliente.setText("Apellidos:");

        labelNombre.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labelNombre.setForeground(new java.awt.Color(255, 255, 255));
        labelNombre.setText("Nombre:");

        logoTrans3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/faroLogoTrans.png"))); // NOI18N

        butMinimizarIngre1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/minimizar2.png"))); // NOI18N
        butMinimizarIngre1.setBorder(null);
        butMinimizarIngre1.setBorderPainted(false);
        butMinimizarIngre1.setContentAreaFilled(false);
        butMinimizarIngre1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/minimizar1.png"))); // NOI18N
        butMinimizarIngre1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butMinimizarIngre1ActionPerformed(evt);
            }
        });

        butCerrarIngre1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/xx1.png"))); // NOI18N
        butCerrarIngre1.setBorder(null);
        butCerrarIngre1.setBorderPainted(false);
        butCerrarIngre1.setContentAreaFilled(false);
        butCerrarIngre1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/xx2.png"))); // NOI18N
        butCerrarIngre1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCerrarIngre1ActionPerformed(evt);
            }
        });

        listAcompanante.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5" }));

        butCancelarRegistro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/cancelarRegistro.png"))); // NOI18N
        butCancelarRegistro.setBorder(null);
        butCancelarRegistro.setBorderPainted(false);
        butCancelarRegistro.setContentAreaFilled(false);
        butCancelarRegistro.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/cancelarRegistro2.png"))); // NOI18N
        butCancelarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCancelarRegistroActionPerformed(evt);
            }
        });

        butSiguiente1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/siguiente1.png"))); // NOI18N
        butSiguiente1.setBorder(null);
        butSiguiente1.setBorderPainted(false);
        butSiguiente1.setContentAreaFilled(false);
        butSiguiente1.setDefaultCapable(false);
        butSiguiente1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/siguiente2.png"))); // NOI18N
        butSiguiente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSiguiente1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout informacionClientePaneLayout = new javax.swing.GroupLayout(informacionClientePane);
        informacionClientePane.setLayout(informacionClientePaneLayout);
        informacionClientePaneLayout.setHorizontalGroup(
            informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informacionClientePaneLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(informacionClientePaneLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(labelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(informacionClientePaneLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(labelApellidoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(informacionClientePaneLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(labelRut)
                        .addGap(10, 10, 10)
                        .addComponent(txtRutPasaporte, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(informacionClientePaneLayout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(labelPais, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(listPaises, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(informacionClientePaneLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(labelTipoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioParticular)
                        .addGap(22, 22, 22)
                        .addComponent(radioEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(informacionClientePaneLayout.createSequentialGroup()
                        .addGroup(informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(informacionClientePaneLayout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(labelTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelCorreoElectronico, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(informacionClientePaneLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(labelCodigoP, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(listAcompanante, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(informacionClientePaneLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addGroup(informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(informacionClientePaneLayout.createSequentialGroup()
                                .addComponent(labelEdad)
                                .addGap(9, 9, 9)
                                .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(informacionClientePaneLayout.createSequentialGroup()
                                .addComponent(labelSexo)
                                .addGap(8, 8, 8)
                                .addComponent(radioMasculino)
                                .addGap(20, 20, 20)
                                .addComponent(radioFemenino)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE)
                .addComponent(logoTrans3))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informacionClientePaneLayout.createSequentialGroup()
                .addContainerGap(812, Short.MAX_VALUE)
                .addGroup(informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informacionClientePaneLayout.createSequentialGroup()
                        .addComponent(butMinimizarIngre1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(butCerrarIngre1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informacionClientePaneLayout.createSequentialGroup()
                        .addComponent(butSiguiente1)
                        .addGap(18, 18, 18)
                        .addComponent(butCancelarRegistro)))
                .addContainerGap())
        );
        informacionClientePaneLayout.setVerticalGroup(
            informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informacionClientePaneLayout.createSequentialGroup()
                .addGroup(informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(informacionClientePaneLayout.createSequentialGroup()
                        .addGroup(informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelApellidoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelRut, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(informacionClientePaneLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(txtRutPasaporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addGroup(informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelEdad)
                            .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radioMasculino)
                            .addComponent(radioFemenino))
                        .addGroup(informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelPais, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(informacionClientePaneLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(listPaises, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelTipoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(radioParticular, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(radioEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(informacionClientePaneLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(labelTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelCorreoElectronico, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(informacionClientePaneLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCodigoP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(listAcompanante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(informacionClientePaneLayout.createSequentialGroup()
                        .addGroup(informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(butCerrarIngre1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(butMinimizarIngre1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(138, 138, 138)
                        .addComponent(logoTrans3, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addGroup(informacionClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(butCancelarRegistro, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(butSiguiente1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        registroCliente.addTab("Información Cliente", informacionClientePane);
        UIManager.put("TabbedPane.selected", Color.white);

        habitacionPane.setBackground(new java.awt.Color(49, 61, 83));
        habitacionPane.setForeground(new java.awt.Color(49, 61, 83));
        habitacionPane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                habitacionPaneMouseDragged(evt);
            }
        });
        habitacionPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                habitacionPaneMousePressed(evt);
            }
        });

        logoTrans4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/faroLogoTrans.png"))); // NOI18N

        butMinimizarIngre3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/minimizar2.png"))); // NOI18N
        butMinimizarIngre3.setBorder(null);
        butMinimizarIngre3.setBorderPainted(false);
        butMinimizarIngre3.setContentAreaFilled(false);
        butMinimizarIngre3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/minimizar1.png"))); // NOI18N
        butMinimizarIngre3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butMinimizarIngre3ActionPerformed(evt);
            }
        });

        butCerrarIngre3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/xx1.png"))); // NOI18N
        butCerrarIngre3.setBorder(null);
        butCerrarIngre3.setBorderPainted(false);
        butCerrarIngre3.setContentAreaFilled(false);
        butCerrarIngre3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/xx2.png"))); // NOI18N
        butCerrarIngre3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCerrarIngre3ActionPerformed(evt);
            }
        });

        butSiguiente2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/siguiente1.png"))); // NOI18N
        butSiguiente2.setBorder(null);
        butSiguiente2.setBorderPainted(false);
        butSiguiente2.setContentAreaFilled(false);
        butSiguiente2.setDefaultCapable(false);
        butSiguiente2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/siguiente2.png"))); // NOI18N
        butSiguiente2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSiguiente2ActionPerformed(evt);
            }
        });

        butCancelarRegistro1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/cancelarRegistro.png"))); // NOI18N
        butCancelarRegistro1.setBorder(null);
        butCancelarRegistro1.setBorderPainted(false);
        butCancelarRegistro1.setContentAreaFilled(false);
        butCancelarRegistro1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/cancelarRegistro2.png"))); // NOI18N
        butCancelarRegistro1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCancelarRegistro1ActionPerformed(evt);
            }
        });

        butAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/atras1.png"))); // NOI18N
        butAtras.setBorder(null);
        butAtras.setBorderPainted(false);
        butAtras.setContentAreaFilled(false);
        butAtras.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/atras2.png"))); // NOI18N
        butAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAtrasActionPerformed(evt);
            }
        });

        labelHabitacion1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        labelHabitacion1.setForeground(new java.awt.Color(255, 255, 255));
        labelHabitacion1.setText("Habitacion A101");

        imageHabitacion1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/H1.png"))); // NOI18N

        labelInfoH1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelInfoH1.setForeground(new java.awt.Color(204, 204, 204));
        labelInfoH1.setText("Informacion:  $70.000 por noche");

        labelContenidoH1.setForeground(new java.awt.Color(255, 255, 255));
        labelContenidoH1.setText("1 Bano, 1 Habitacion,  jacuzzi, vista al bosque");

        labelInicio1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelInicio1.setForeground(new java.awt.Color(255, 255, 255));
        labelInicio1.setText("Inicio");
        labelInicio1.setToolTipText("");

        labelTermino1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelTermino1.setForeground(new java.awt.Color(255, 255, 255));
        labelTermino1.setText("Termino");
        labelTermino1.setToolTipText("");

        radioSelectH1.setBackground(new java.awt.Color(102, 102, 102));
        radioSelectH1.setForeground(new java.awt.Color(204, 204, 204));
        radioSelectH1.setText("Seleccionar");
        radioSelectH1.setContentAreaFilled(false);
        radioSelectH1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        radioSelectH1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSelectH1ActionPerformed(evt);
            }
        });

        labelHabitacion2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        labelHabitacion2.setForeground(new java.awt.Color(255, 255, 255));
        labelHabitacion2.setText("Habitacion A102");

        imageHabitacion2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/H2.png"))); // NOI18N

        labelInfoH2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelInfoH2.setForeground(new java.awt.Color(204, 204, 204));
        labelInfoH2.setText("Informacion:  $90.000 por noche");

        labelContenidoH2.setForeground(new java.awt.Color(255, 255, 255));
        labelContenidoH2.setText("2 Banos, 2 Habitaciones, pisina");

        labelInicio2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelInicio2.setForeground(new java.awt.Color(255, 255, 255));
        labelInicio2.setText("Inicio");
        labelInicio2.setToolTipText("");

        labelTermino2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelTermino2.setForeground(new java.awt.Color(255, 255, 255));
        labelTermino2.setText("Termino");
        labelTermino2.setToolTipText("");

        radioSelectH2.setBackground(new java.awt.Color(102, 102, 102));
        radioSelectH2.setForeground(new java.awt.Color(204, 204, 204));
        radioSelectH2.setText("Seleccionar");
        radioSelectH2.setContentAreaFilled(false);
        radioSelectH2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        radioSelectH2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSelectH2ActionPerformed(evt);
            }
        });

        labelHabitacion3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        labelHabitacion3.setForeground(new java.awt.Color(255, 255, 255));
        labelHabitacion3.setText("Habitacion B201");

        imageHabitacion3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/H3.png"))); // NOI18N

        labelInfoH3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelInfoH3.setForeground(new java.awt.Color(204, 204, 204));
        labelInfoH3.setText("Informacion: $100.000 por noche");

        labelContenidoH3.setForeground(new java.awt.Color(255, 255, 255));
        labelContenidoH3.setText("3 Banos, 3 Habitaciones, vista al mar");

        labelInicio3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelInicio3.setForeground(new java.awt.Color(255, 255, 255));
        labelInicio3.setText("Inicio");
        labelInicio3.setToolTipText("");

        labelTermino3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelTermino3.setForeground(new java.awt.Color(255, 255, 255));
        labelTermino3.setText("Termino");
        labelTermino3.setToolTipText("");

        radioSelectH3.setBackground(new java.awt.Color(102, 102, 102));
        radioSelectH3.setForeground(new java.awt.Color(204, 204, 204));
        radioSelectH3.setText("Seleccionar");
        radioSelectH3.setContentAreaFilled(false);
        radioSelectH3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        radioSelectH3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSelectH3ActionPerformed(evt);
            }
        });

        labelHabitacion4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        labelHabitacion4.setForeground(new java.awt.Color(255, 255, 255));
        labelHabitacion4.setText("Habitacion B202");

        imageHabitacion4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/H4.png"))); // NOI18N

        labelInfoH4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelInfoH4.setForeground(new java.awt.Color(204, 204, 204));
        labelInfoH4.setText("Informacion: $120.000 por noche");

        labelContenidoH4.setForeground(new java.awt.Color(255, 255, 255));
        labelContenidoH4.setText("3 Banos, 4 Habitaciones, mesa de pool");

        labelInicio4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelInicio4.setForeground(new java.awt.Color(255, 255, 255));
        labelInicio4.setText("Inicio");
        labelInicio4.setToolTipText("");

        labelTermino4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelTermino4.setForeground(new java.awt.Color(255, 255, 255));
        labelTermino4.setText("Termino");
        labelTermino4.setToolTipText("");

        radioSelectH4.setBackground(new java.awt.Color(102, 102, 102));
        radioSelectH4.setForeground(new java.awt.Color(204, 204, 204));
        radioSelectH4.setText("Seleccionar");
        radioSelectH4.setContentAreaFilled(false);
        radioSelectH4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        radioSelectH4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSelectH4ActionPerformed(evt);
            }
        });

        jdcInicioH1.setDateFormatString("yyyy/MM/dd");
        jdcInicioH1.getDateEditor().setEnabled(false);

        jdcInicioH2.setDateFormatString("yyyy/MM/dd");

        jdcInicioH3.setDateFormatString("yyyy/MM/dd");

        jdcInicioH4.setDateFormatString("yyyy/MM/dd");

        jdcTerminoH1.setDateFormatString("yyyy/MM/dd");

        jdcTerminoH2.setDateFormatString("yyyy/MM/dd");

        jdcTerminoH3.setDateFormatString("yyyy/MM/dd");

        jdcTerminoH4.setDateFormatString("yyyy/MM/dd");

        javax.swing.GroupLayout habitacionPaneLayout = new javax.swing.GroupLayout(habitacionPane);
        habitacionPane.setLayout(habitacionPaneLayout);
        habitacionPaneLayout.setHorizontalGroup(
            habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(habitacionPaneLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(habitacionPaneLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(habitacionPaneLayout.createSequentialGroup()
                                .addComponent(imageHabitacion1)
                                .addGap(160, 160, 160)
                                .addComponent(imageHabitacion2))
                            .addGroup(habitacionPaneLayout.createSequentialGroup()
                                .addComponent(labelInfoH1)
                                .addGap(186, 186, 186)
                                .addComponent(labelInfoH2))
                            .addGroup(habitacionPaneLayout.createSequentialGroup()
                                .addComponent(imageHabitacion3)
                                .addGap(160, 160, 160)
                                .addComponent(imageHabitacion4))
                            .addGroup(habitacionPaneLayout.createSequentialGroup()
                                .addComponent(labelInfoH3)
                                .addGap(184, 184, 184)
                                .addComponent(labelInfoH4))
                            .addGroup(habitacionPaneLayout.createSequentialGroup()
                                .addComponent(labelContenidoH3)
                                .addGap(202, 202, 202)
                                .addComponent(labelContenidoH4))
                            .addGroup(habitacionPaneLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(habitacionPaneLayout.createSequentialGroup()
                                        .addComponent(labelHabitacion1)
                                        .addGap(224, 224, 224)
                                        .addComponent(labelHabitacion2))
                                    .addGroup(habitacionPaneLayout.createSequentialGroup()
                                        .addComponent(labelHabitacion3)
                                        .addGap(224, 224, 224)
                                        .addComponent(labelHabitacion4))))
                            .addGroup(habitacionPaneLayout.createSequentialGroup()
                                .addComponent(labelContenidoH1)
                                .addGap(156, 156, 156)
                                .addComponent(labelContenidoH2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(habitacionPaneLayout.createSequentialGroup()
                        .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(habitacionPaneLayout.createSequentialGroup()
                                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelTermino3)
                                    .addComponent(labelInicio3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jdcTerminoH3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jdcInicioH3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioSelectH3))
                            .addGroup(habitacionPaneLayout.createSequentialGroup()
                                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelTermino1)
                                    .addComponent(labelInicio1))
                                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(habitacionPaneLayout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jdcInicioH1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(habitacionPaneLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jdcTerminoH1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioSelectH1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(habitacionPaneLayout.createSequentialGroup()
                                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelTermino2)
                                    .addComponent(labelInicio2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jdcInicioH2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jdcTerminoH2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addComponent(radioSelectH2))
                            .addGroup(habitacionPaneLayout.createSequentialGroup()
                                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelTermino4)
                                    .addComponent(labelInicio4))
                                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(habitacionPaneLayout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jdcInicioH4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(radioSelectH4))
                                    .addGroup(habitacionPaneLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jdcTerminoH4, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(72, 72, 72)))
                .addComponent(logoTrans4))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, habitacionPaneLayout.createSequentialGroup()
                .addContainerGap(637, Short.MAX_VALUE)
                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, habitacionPaneLayout.createSequentialGroup()
                        .addComponent(butMinimizarIngre3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(butCerrarIngre3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, habitacionPaneLayout.createSequentialGroup()
                        .addComponent(butAtras)
                        .addGap(18, 18, 18)
                        .addComponent(butSiguiente2)
                        .addGap(18, 18, 18)
                        .addComponent(butCancelarRegistro1)))
                .addContainerGap())
        );
        habitacionPaneLayout.setVerticalGroup(
            habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, habitacionPaneLayout.createSequentialGroup()
                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(habitacionPaneLayout.createSequentialGroup()
                        .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(butCerrarIngre3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(butMinimizarIngre3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(136, 136, 136)
                        .addComponent(logoTrans4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                        .addComponent(butCancelarRegistro1))
                    .addGroup(habitacionPaneLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelHabitacion1)
                            .addComponent(labelHabitacion2))
                        .addGap(8, 8, 8)
                        .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(imageHabitacion1)
                            .addComponent(imageHabitacion2))
                        .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelInfoH1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelInfoH2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelContenidoH1)
                            .addComponent(labelContenidoH2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(habitacionPaneLayout.createSequentialGroup()
                                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioSelectH2)
                                    .addComponent(labelInicio2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jdcInicioH2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelTermino2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jdcTerminoH2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(radioSelectH1)
                            .addGroup(habitacionPaneLayout.createSequentialGroup()
                                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelInicio1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jdcInicioH1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelTermino1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jdcTerminoH1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelHabitacion3)
                            .addComponent(labelHabitacion4))
                        .addGap(8, 8, 8)
                        .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(imageHabitacion3)
                            .addComponent(imageHabitacion4))
                        .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelInfoH3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelInfoH4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelContenidoH3)
                            .addComponent(labelContenidoH4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(habitacionPaneLayout.createSequentialGroup()
                                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelInicio4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(radioSelectH4)
                                    .addComponent(jdcInicioH4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(habitacionPaneLayout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(labelTermino4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(habitacionPaneLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jdcTerminoH4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(habitacionPaneLayout.createSequentialGroup()
                                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(labelInicio3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jdcInicioH3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(radioSelectH3))
                                .addGap(7, 7, 7)
                                .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelTermino3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jdcTerminoH3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(habitacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(butSiguiente2)
                            .addComponent(butAtras))))
                .addContainerGap())
        );

        registroCliente.addTab("       Habitaciones       ", habitacionPane);

        serviciosPane.setBackground(new java.awt.Color(49, 61, 83));
        serviciosPane.setForeground(new java.awt.Color(49, 61, 83));
        serviciosPane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                serviciosPaneMouseDragged(evt);
            }
        });
        serviciosPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                serviciosPaneMousePressed(evt);
            }
        });

        labelNombreS4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        labelNombreS4.setForeground(new java.awt.Color(255, 255, 255));
        labelNombreS4.setText("Buceo");
        labelNombreS4.setToolTipText("");

        imageServicio4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/S4.png"))); // NOI18N

        informacionS4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        informacionS4.setForeground(new java.awt.Color(204, 204, 204));
        informacionS4.setText("Información:");

        descripcionS4.setForeground(new java.awt.Color(153, 153, 153));
        descripcionS4.setText("10 Clases de buceo en el mar, acompañado");

        descripcionS4_1.setForeground(new java.awt.Color(153, 153, 153));
        descripcionS4_1.setText("de los mejores profesores. $70.000");

        radioServicio4.setForeground(new java.awt.Color(255, 255, 255));
        radioServicio4.setText("Seleccionar");
        radioServicio4.setContentAreaFilled(false);
        radioServicio4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        labelNombreS3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        labelNombreS3.setForeground(new java.awt.Color(255, 255, 255));
        labelNombreS3.setText("Cena");
        labelNombreS3.setToolTipText("");

        imageServicio3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/S3.png"))); // NOI18N

        informacionS3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        informacionS3.setForeground(new java.awt.Color(204, 204, 204));
        informacionS3.setText("Información:");

        descripcionS3_1.setForeground(new java.awt.Color(153, 153, 153));
        descripcionS3_1.setText("de estadía. $100.000");

        descripcionS3.setForeground(new java.awt.Color(153, 153, 153));
        descripcionS3.setText("Cena gourmet / buffet para todos los días ");

        radioServicio3.setForeground(new java.awt.Color(255, 255, 255));
        radioServicio3.setText("Seleccionar");
        radioServicio3.setContentAreaFilled(false);
        radioServicio3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        labelNombreS2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        labelNombreS2.setForeground(new java.awt.Color(255, 255, 255));
        labelNombreS2.setText("Masajería");
        labelNombreS2.setToolTipText("");

        imageServicio2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/S2.png"))); // NOI18N

        informacionS2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        informacionS2.setForeground(new java.awt.Color(204, 204, 204));
        informacionS2.setText("Información:");

        descripcionS2.setForeground(new java.awt.Color(153, 153, 153));
        descripcionS2.setText("Masajes disponibles por toda la estadía.");

        radioServicio2.setForeground(new java.awt.Color(255, 255, 255));
        radioServicio2.setText("Seleccionar");
        radioServicio2.setContentAreaFilled(false);
        radioServicio2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        radioServicio1.setForeground(new java.awt.Color(255, 255, 255));
        radioServicio1.setText("Seleccionar");
        radioServicio1.setContentAreaFilled(false);
        radioServicio1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        descripcionS1_1.setForeground(new java.awt.Color(153, 153, 153));
        descripcionS1_1.setText("a toda necesidad del cliente. $200.000");

        descripcionS1.setForeground(new java.awt.Color(153, 153, 153));
        descripcionS1.setText("Es asignado un asistente el cual responde");

        informacionS1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        informacionS1.setForeground(new java.awt.Color(204, 204, 204));
        informacionS1.setText("Información:");

        labelNombreS1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        labelNombreS1.setForeground(new java.awt.Color(255, 255, 255));
        labelNombreS1.setText("Servicio a la Habitación");
        labelNombreS1.setToolTipText("");

        imageServicio1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/S1.png"))); // NOI18N

        logoTrans1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/faroLogoTrans.png"))); // NOI18N

        butMinimizarIngre4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/minimizar2.png"))); // NOI18N
        butMinimizarIngre4.setBorder(null);
        butMinimizarIngre4.setBorderPainted(false);
        butMinimizarIngre4.setContentAreaFilled(false);
        butMinimizarIngre4.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/minimizar1.png"))); // NOI18N
        butMinimizarIngre4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butMinimizarIngre4ActionPerformed(evt);
            }
        });

        butCerrarIngre4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/xx1.png"))); // NOI18N
        butCerrarIngre4.setBorder(null);
        butCerrarIngre4.setBorderPainted(false);
        butCerrarIngre4.setContentAreaFilled(false);
        butCerrarIngre4.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/xx2.png"))); // NOI18N
        butCerrarIngre4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCerrarIngre4ActionPerformed(evt);
            }
        });

        butSiguiente3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/siguiente1.png"))); // NOI18N
        butSiguiente3.setBorder(null);
        butSiguiente3.setBorderPainted(false);
        butSiguiente3.setContentAreaFilled(false);
        butSiguiente3.setDefaultCapable(false);
        butSiguiente3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/siguiente2.png"))); // NOI18N
        butSiguiente3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSiguiente3ActionPerformed(evt);
            }
        });

        butCancelarRegistro2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/cancelarRegistro.png"))); // NOI18N
        butCancelarRegistro2.setBorder(null);
        butCancelarRegistro2.setBorderPainted(false);
        butCancelarRegistro2.setContentAreaFilled(false);
        butCancelarRegistro2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/cancelarRegistro2.png"))); // NOI18N
        butCancelarRegistro2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCancelarRegistro2ActionPerformed(evt);
            }
        });

        butAtras1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/atras1.png"))); // NOI18N
        butAtras1.setBorder(null);
        butAtras1.setBorderPainted(false);
        butAtras1.setContentAreaFilled(false);
        butAtras1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/atras2.png"))); // NOI18N
        butAtras1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAtras1ActionPerformed(evt);
            }
        });

        descripcionS5.setForeground(new java.awt.Color(153, 153, 153));
        descripcionS5.setText("$50.000");

        javax.swing.GroupLayout serviciosPaneLayout = new javax.swing.GroupLayout(serviciosPane);
        serviciosPane.setLayout(serviciosPaneLayout);
        serviciosPaneLayout.setHorizontalGroup(
            serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serviciosPaneLayout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serviciosPaneLayout.createSequentialGroup()
                        .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(serviciosPaneLayout.createSequentialGroup()
                                .addComponent(labelNombreS1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(210, 210, 210)
                                .addComponent(labelNombreS2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(serviciosPaneLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(serviciosPaneLayout.createSequentialGroup()
                                        .addComponent(informacionS3)
                                        .addGap(323, 323, 323)
                                        .addComponent(informacionS4))
                                    .addGroup(serviciosPaneLayout.createSequentialGroup()
                                        .addComponent(descripcionS3)
                                        .addGap(174, 174, 174)
                                        .addComponent(descripcionS4))
                                    .addGroup(serviciosPaneLayout.createSequentialGroup()
                                        .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(radioServicio3)
                                            .addComponent(descripcionS3_1))
                                        .addGap(294, 294, 294)
                                        .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(descripcionS4_1)
                                            .addComponent(radioServicio4)))))
                            .addGroup(serviciosPaneLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(imageServicio1)
                                .addGap(160, 160, 160)
                                .addComponent(imageServicio2))
                            .addGroup(serviciosPaneLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(informacionS1)
                                .addGap(323, 323, 323)
                                .addComponent(informacionS2))
                            .addGroup(serviciosPaneLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(descripcionS1)
                                .addGap(171, 171, 171)
                                .addComponent(descripcionS2))
                            .addGroup(serviciosPaneLayout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(labelNombreS3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(350, 350, 350)
                                .addComponent(labelNombreS4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(serviciosPaneLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(imageServicio3)
                                .addGap(160, 160, 160)
                                .addComponent(imageServicio4))
                            .addGroup(serviciosPaneLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioServicio1)
                                    .addComponent(descripcionS1_1))
                                .addGap(194, 194, 194)
                                .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(descripcionS5)
                                    .addComponent(radioServicio2))))
                        .addGap(43, 43, 43)
                        .addComponent(logoTrans1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serviciosPaneLayout.createSequentialGroup()
                        .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serviciosPaneLayout.createSequentialGroup()
                                .addComponent(butMinimizarIngre4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(butCerrarIngre4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serviciosPaneLayout.createSequentialGroup()
                                .addComponent(butAtras1)
                                .addGap(18, 18, 18)
                                .addComponent(butSiguiente3)
                                .addGap(18, 18, 18)
                                .addComponent(butCancelarRegistro2)))
                        .addContainerGap())))
        );
        serviciosPaneLayout.setVerticalGroup(
            serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serviciosPaneLayout.createSequentialGroup()
                .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(serviciosPaneLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelNombreS1)
                            .addComponent(labelNombreS2))
                        .addGap(8, 8, 8)
                        .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(imageServicio1)
                            .addComponent(imageServicio2))
                        .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(informacionS1)
                            .addComponent(informacionS2))
                        .addGap(1, 1, 1)
                        .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(descripcionS1)
                            .addComponent(descripcionS2))
                        .addGap(4, 4, 4)
                        .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(descripcionS1_1)
                            .addComponent(descripcionS5))
                        .addGap(4, 4, 4)
                        .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioServicio1)
                            .addComponent(radioServicio2))
                        .addGap(32, 32, 32)
                        .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelNombreS3)
                            .addComponent(labelNombreS4))
                        .addGap(8, 8, 8)
                        .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(imageServicio3)
                            .addComponent(imageServicio4))
                        .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(serviciosPaneLayout.createSequentialGroup()
                                .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(informacionS3)
                                    .addComponent(informacionS4))
                                .addGap(1, 1, 1)
                                .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(descripcionS3)
                                    .addComponent(descripcionS4))
                                .addGap(4, 4, 4)
                                .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(descripcionS3_1)
                                    .addComponent(descripcionS4_1))
                                .addGap(4, 4, 4)
                                .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioServicio3)
                                    .addComponent(radioServicio4))
                                .addGap(19, 75, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serviciosPaneLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(butAtras1))))
                    .addGroup(serviciosPaneLayout.createSequentialGroup()
                        .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(butCerrarIngre4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(butMinimizarIngre4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logoTrans1)
                        .addGap(119, 119, 119)
                        .addGroup(serviciosPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(butSiguiente3)
                            .addComponent(butCancelarRegistro2))))
                .addContainerGap())
        );

        registroCliente.addTab("          Servicios         ", serviciosPane);

        confirmacionPane.setBackground(new java.awt.Color(49, 61, 83));
        confirmacionPane.setForeground(new java.awt.Color(49, 61, 83));
        confirmacionPane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                confirmacionPaneMouseDragged(evt);
            }
        });
        confirmacionPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                confirmacionPaneMousePressed(evt);
            }
        });

        txtDatos.setBackground(new java.awt.Color(255, 255, 255));
        txtDatos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtDatos.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtDatos.setEditable(false);
        jScrollPane1.setViewportView(txtDatos);

        butImprimirBoleta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/imprimir1.png"))); // NOI18N
        butImprimirBoleta.setBorder(null);
        butImprimirBoleta.setBorderPainted(false);
        butImprimirBoleta.setContentAreaFilled(false);
        butImprimirBoleta.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/imprimir2.png"))); // NOI18N
        butImprimirBoleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butImprimirBoletaActionPerformed(evt);
            }
        });

        logoTrans.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/faroLogoTrans.png"))); // NOI18N

        butMinimizarIngre5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/minimizar2.png"))); // NOI18N
        butMinimizarIngre5.setBorder(null);
        butMinimizarIngre5.setBorderPainted(false);
        butMinimizarIngre5.setContentAreaFilled(false);
        butMinimizarIngre5.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/minimizar1.png"))); // NOI18N
        butMinimizarIngre5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butMinimizarIngre5ActionPerformed(evt);
            }
        });

        butCerrarIngre5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/xx1.png"))); // NOI18N
        butCerrarIngre5.setBorder(null);
        butCerrarIngre5.setBorderPainted(false);
        butCerrarIngre5.setContentAreaFilled(false);
        butCerrarIngre5.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/xx2.png"))); // NOI18N
        butCerrarIngre5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCerrarIngre5ActionPerformed(evt);
            }
        });

        butCancelarRegistro3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/cancelarRegistro.png"))); // NOI18N
        butCancelarRegistro3.setBorder(null);
        butCancelarRegistro3.setBorderPainted(false);
        butCancelarRegistro3.setContentAreaFilled(false);
        butCancelarRegistro3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/cancelarRegistro2.png"))); // NOI18N
        butCancelarRegistro3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCancelarRegistro3ActionPerformed(evt);
            }
        });

        butAtras2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/atras1.png"))); // NOI18N
        butAtras2.setBorder(null);
        butAtras2.setBorderPainted(false);
        butAtras2.setContentAreaFilled(false);
        butAtras2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/atras2.png"))); // NOI18N
        butAtras2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAtras2ActionPerformed(evt);
            }
        });

        burModificarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/modificar1.png"))); // NOI18N
        burModificarCliente.setBorder(null);
        burModificarCliente.setBorderPainted(false);
        burModificarCliente.setContentAreaFilled(false);
        burModificarCliente.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/modificar2.png"))); // NOI18N
        burModificarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                burModificarClienteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 0));
        jLabel1.setText("MODIFICAR:");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Antes de confirmar el registro, imprima la boleta");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("y confirme con el cliente que toda la información");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("esté correcta, luego de eso, confirme el registro.");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 204, 0));
        jLabel5.setText("AVISO:");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Para modificar un cliente, debe ingresar el rut del");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("huesped, y luego completar TODOS los campos ");

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("nuevamente para poder actualizar los datos.");

        butRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/registrar1.png"))); // NOI18N
        butRegistrar.setBorder(null);
        butRegistrar.setBorderPainted(false);
        butRegistrar.setContentAreaFilled(false);
        butRegistrar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/registrar2.png"))); // NOI18N
        butRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRegistrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout confirmacionPaneLayout = new javax.swing.GroupLayout(confirmacionPane);
        confirmacionPane.setLayout(confirmacionPaneLayout);
        confirmacionPaneLayout.setHorizontalGroup(
            confirmacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(confirmacionPaneLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(confirmacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(confirmacionPaneLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(confirmacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                        .addComponent(logoTrans))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, confirmacionPaneLayout.createSequentialGroup()
                        .addGroup(confirmacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(butImprimirBoleta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(burModificarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(confirmacionPaneLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(confirmacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, confirmacionPaneLayout.createSequentialGroup()
                                .addComponent(butMinimizarIngre5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(butCerrarIngre5))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, confirmacionPaneLayout.createSequentialGroup()
                                .addComponent(butAtras2)
                                .addGap(18, 18, 18)
                                .addComponent(butRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(butCancelarRegistro3)))
                        .addContainerGap())))
        );
        confirmacionPaneLayout.setVerticalGroup(
            confirmacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(confirmacionPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(confirmacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, confirmacionPaneLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(confirmacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(confirmacionPaneLayout.createSequentialGroup()
                                .addComponent(butImprimirBoleta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(burModificarCliente)
                                .addGap(76, 76, 76)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)))
                        .addGap(12, 12, 12)
                        .addComponent(butAtras2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, confirmacionPaneLayout.createSequentialGroup()
                        .addGroup(confirmacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(butCerrarIngre5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(butMinimizarIngre5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                        .addComponent(logoTrans)
                        .addGap(119, 119, 119)
                        .addGroup(confirmacionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(butCancelarRegistro3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(butRegistrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        registroCliente.addTab("          Confirmación         ", confirmacionPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(registroCliente)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(registroCliente)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Al seleccionar el radio buton de empresa se deselecciona el de particular
     *
     * @param evt
     */
    private void radioEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioEmpresaActionPerformed
        radioParticular.setSelected(false);
        radioEmpresa.setSelected(true);
    }//GEN-LAST:event_radioEmpresaActionPerformed
    /**
     * Al seleccionar el radio buton de particular se deselecciona el de empresa
     *
     * @param evt
     */
    private void radioParticularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioParticularActionPerformed
        radioEmpresa.setSelected(false);
        radioParticular.setSelected(true);
    }//GEN-LAST:event_radioParticularActionPerformed
    /**
     * Al seleccionar el radio buton femenino se deselecciona el masculino
     *
     * @param evt
     */
    private void radioFemeninoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioFemeninoActionPerformed
        radioMasculino.setSelected(false);
        radioFemenino.setSelected(true);
    }//GEN-LAST:event_radioFemeninoActionPerformed
    /**
     * Al seleccionar el radio buton masculino se deselecciona el femenino
     *
     * @param evt
     */
    private void radioMasculinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMasculinoActionPerformed
        radioFemenino.setSelected(false);
        radioMasculino.setSelected(true);
    }//GEN-LAST:event_radioMasculinoActionPerformed

    /**
     * Botón para minimizar la pestaña (Tab1)
     *
     * @param evt
     */
    private void butMinimizarIngre1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butMinimizarIngre1ActionPerformed
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_butMinimizarIngre1ActionPerformed
    /**
     * Botón en forma de "x" que cancela el registro, cierra el frame y abre el
     * menú, antes de ejecutar su acción abre un JOptionPane de confrimación de
     * cancelación de registro (para Tab1)
     *
     * @param evt
     */
    private void butCerrarIngre1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCerrarIngre1ActionPerformed
        int cancelButton = JOptionPane.showConfirmDialog(
                null,
                "¿Quieres cancelar el registro?",
                "ADVERTENCIA",
                JOptionPane.YES_NO_OPTION);

        if (cancelButton == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(null, "Registro Cancelado");
            this.dispose();
            menuSys sys2 = new menuSys();
            sys2.setVisible(true);
            if (cancelButton == JOptionPane.NO_OPTION) {
                remove(cancelButton);
            }
        }

    }//GEN-LAST:event_butCerrarIngre1ActionPerformed
    /**
     * Botón para minimizar la pestaña (Tab2)
     *
     * @param evt
     */
    private void butMinimizarIngre3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butMinimizarIngre3ActionPerformed
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_butMinimizarIngre3ActionPerformed
    /**
     * Botón en forma de "x" que cancela el registro, cierra el frame y abre el
     * menú, antes de ejecutar su acción abre un JOptionPane de confrimación de
     * cancelación de registro (para Tab2)
     *
     * @param evt
     */
    private void butCerrarIngre3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCerrarIngre3ActionPerformed
        int cancelButton = JOptionPane.showConfirmDialog(
                null,
                "¿Quieres cancelar el registro?",
                "ADVERTENCIA",
                JOptionPane.YES_NO_OPTION);

        if (cancelButton == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(null, "Registro Cancelado");
            this.dispose();
            menuSys sys2 = new menuSys();
            sys2.setVisible(true);
            if (cancelButton == JOptionPane.NO_OPTION) {
                remove(cancelButton);
            }
        }
    }//GEN-LAST:event_butCerrarIngre3ActionPerformed
    /**
     * Botón para minimizar la pestaña (Tab3)
     *
     * @param evt
     */
    private void butMinimizarIngre4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butMinimizarIngre4ActionPerformed
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_butMinimizarIngre4ActionPerformed
    /**
     * Botón en forma de "x" que cancela el registro, cierra el frame y abre el
     * menú, antes de ejecutar su acción abre un JOptionPane de confrimación de
     * cancelación de registro (para Tab3)
     *
     * @param evt
     */
    private void butCerrarIngre4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCerrarIngre4ActionPerformed
        int cancelButton = JOptionPane.showConfirmDialog(
                null,
                "¿Quieres cancelar el registro?",
                "ADVERTENCIA",
                JOptionPane.YES_NO_OPTION);

        if (cancelButton == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(null, "Registro Cancelado");
            this.dispose();
            menuSys sys2 = new menuSys();
            sys2.setVisible(true);
            if (cancelButton == JOptionPane.NO_OPTION) {
                remove(cancelButton);
            }
        }
    }//GEN-LAST:event_butCerrarIngre4ActionPerformed
    /**
     * Botón para minimizar la pestaña (Tab4)
     *
     * @param evt
     */
    private void butMinimizarIngre5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butMinimizarIngre5ActionPerformed
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_butMinimizarIngre5ActionPerformed
    /**
     * Botón en forma de "x" que cancela el registro, cierra el frame y abre el
     * menú, antes de ejecutar su acción abre un JOptionPane de confrimación de
     * cancelación de registro (para Tab4)
     *
     * @param evt
     */
    private void butCerrarIngre5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCerrarIngre5ActionPerformed
        int cancelButton = JOptionPane.showConfirmDialog(
                null,
                "¿Quieres cancelar el registro?",
                "ADVERTENCIA",
                JOptionPane.YES_NO_OPTION);

        if (cancelButton == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(null, "Registro Cancelado");
            this.dispose();
            menuSys sys2 = new menuSys();
            sys2.setVisible(true);
            if (cancelButton == JOptionPane.NO_OPTION) {
                remove(cancelButton);
            }
        }
    }//GEN-LAST:event_butCerrarIngre5ActionPerformed
    /**
     * Botón que cancela el registro, cierra el frame y abre el menú, antes de
     * ejecutar su acción abre un JOptionPane de confrimación de cancelación de
     * registro (para Tab1)
     *
     * @param evt
     */
    private void butCancelarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCancelarRegistroActionPerformed
        int cancelButton = JOptionPane.showConfirmDialog(
                null,
                "¿Quieres cancelar el registro?",
                "ADVERTENCIA",
                JOptionPane.YES_NO_OPTION);

        if (cancelButton == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(null, "Registro Cancelado");
            this.dispose();
            menuSys sys2 = new menuSys();
            sys2.setVisible(true);
        }
        if (cancelButton == JOptionPane.NO_OPTION) {
            remove(cancelButton);
        }
    }//GEN-LAST:event_butCancelarRegistroActionPerformed
    /**
     * Botón de SIGUIENTE que desabilita el tab1 y selecciona el tab2
     * habilitandolo
     *
     * @param evt
     */
    private void butSiguiente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSiguiente1ActionPerformed
        registroCliente.setSelectedIndex(1);
        registroCliente.setEnabledAt(0, false);
        registroCliente.setEnabledAt(1, true);
    }//GEN-LAST:event_butSiguiente1ActionPerformed
    /**
     * Botón de SIGUIENTE que desabilita el tab2 y selecciona el tab3
     * habilitandolo
     *
     * @param evt
     */
    private void butSiguiente2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSiguiente2ActionPerformed
        registroCliente.setSelectedIndex(2);
        registroCliente.setEnabledAt(1, false);
        registroCliente.setEnabledAt(2, true);
    }//GEN-LAST:event_butSiguiente2ActionPerformed
    /**
     * Botón de SIGUIENTE que desabilita el tab3 y selecciona el tab4
     * habilitandolo
     *
     * @param evt
     */
    private void butSiguiente3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSiguiente3ActionPerformed
        registroCliente.setSelectedIndex(3);
        registroCliente.setEnabledAt(2, false);
        registroCliente.setEnabledAt(3, true);
    }//GEN-LAST:event_butSiguiente3ActionPerformed
    /**
     * Botón de ATRAS que desabilita el tab4 y selecciona el tab3 habilitandolo
     *
     * @param evt
     */
    private void butAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAtrasActionPerformed
        registroCliente.setSelectedIndex(0);
        registroCliente.setEnabledAt(0, true);
        registroCliente.setEnabledAt(1, false);
    }//GEN-LAST:event_butAtrasActionPerformed
    /**
     * Botón de ATRAS que desabilita el tab3 y selecciona el tab2 habilitandolo
     *
     * @param evt
     */
    private void butAtras1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAtras1ActionPerformed
        registroCliente.setSelectedIndex(1);
        registroCliente.setEnabledAt(1, true);
        registroCliente.setEnabledAt(2, false);
    }//GEN-LAST:event_butAtras1ActionPerformed
    /**
     * Botón de ATRAS que desabilita el tab2 y selecciona el tab1 habilitandolo
     *
     * @param evt
     */
    private void butAtras2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAtras2ActionPerformed
        registroCliente.setSelectedIndex(2);
        registroCliente.setEnabledAt(2, true);
        registroCliente.setEnabledAt(3, false);
    }//GEN-LAST:event_butAtras2ActionPerformed
    /**
     * Botón que cancela el registro, cierra el frame y abre el menú, antes de
     * ejecutar su acción abre un JOptionPane de confrimación de cancelación de
     * registro (para Tab2)
     *
     * @param evt
     */
    private void butCancelarRegistro1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCancelarRegistro1ActionPerformed
        int cancelButton = JOptionPane.showConfirmDialog(
                null,
                "¿Quieres cancelar el registro?",
                "ADVERTENCIA",
                JOptionPane.YES_NO_OPTION);

        if (cancelButton == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(null, "Registro Cancelado");
            this.dispose();
            menuSys sys2 = new menuSys();
            sys2.setVisible(true);
        }
        if (cancelButton == JOptionPane.NO_OPTION) {
            remove(cancelButton);
        }
    }//GEN-LAST:event_butCancelarRegistro1ActionPerformed
    /**
     * Botón que cancela el registro, cierra el frame y abre el menú, antes de
     * ejecutar su acción abre un JOptionPane de confrimación de cancelación de
     * registro (para Tab3)
     *
     * @param evt
     */
    private void butCancelarRegistro2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCancelarRegistro2ActionPerformed
        int cancelButton = JOptionPane.showConfirmDialog(
                null,
                "¿Quieres cancelar el registro?",
                "ADVERTENCIA",
                JOptionPane.YES_NO_OPTION);

        if (cancelButton == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(null, "Registro Cancelado");
            this.dispose();
            menuSys sys2 = new menuSys();
            sys2.setVisible(true);
        }
        if (cancelButton == JOptionPane.NO_OPTION) {
            remove(cancelButton);
        }
    }//GEN-LAST:event_butCancelarRegistro2ActionPerformed
    /**
     * Botón que cancela el registro, cierra el frame y abre el menú, antes de
     * ejecutar su acción abre un JOptionPane de confrimación de cancelación de
     * registro (para Tab4)
     *
     * @param evt
     */
    private void butCancelarRegistro3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCancelarRegistro3ActionPerformed
        int cancelButton = JOptionPane.showConfirmDialog(
                null,
                "¿Quieres cancelar el registro?",
                "ADVERTENCIA",
                JOptionPane.YES_NO_OPTION);

        if (cancelButton == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(null, "Registro Cancelado");
            this.dispose();
            menuSys sys2 = new menuSys();
            sys2.setVisible(true);
        }
        if (cancelButton == JOptionPane.NO_OPTION) {
            remove(cancelButton);
        }
    }//GEN-LAST:event_butCancelarRegistro3ActionPerformed
    /**
     * Botón que imprime en el box de texto "txtDatos" toda la información
     * selecionada y la información del pago
     *
     * @param evt
     */
    private void butImprimirBoletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butImprimirBoletaActionPerformed
        try {
            String nombre = txtNombre.getText().toUpperCase();
            String apellido = txtApellido.getText().toUpperCase();
            String rut = txtRutPasaporte.getText();
            Integer edad = Integer.valueOf(txtEdad.getText());
            String pais = listPaises.getSelectedItem().toString();
            String correo = txtCorreo.getText();
            String telefono = txtTelefono.getText();
            Integer compannantes = Integer.valueOf(listAcompanante.getSelectedItem().toString());

            txtDatos.setText("=====Información Cliente=====" + "\n"
                    + "Nombre: " + nombre + "\n"
                    + "Apellido: " + apellido + "\n"
                    + "Rut / Pasaporte: " + rut + "\n"
                    + "Edad: " + edad() + "\n"
                    + "sexo: " + sexo1() + "\n"
                    + "Pais: " + pais + "\n"
                    + "tipo Huesped: " + tipo1() + "\n"
                    + "Correo: " + correo + "\n"
                    + "Telefono: " + telefono + "\n"
                    + "Acompañantes: " + compannantes + "\n"
                    + "=====Información Estadía=====" + "\n"
                    + fechasBoleta() + "\n"
                    + "Numero Habitacionn" + habitacion() + "\n"
                    + servicio() + "\n"
                    + "=====Información Pago=====" + "\n"
                    + "Pagon sin descuento: " + "$" + pagoSinDescuento() + "\n"
                    + "Pago con descuento: " + pagoConDescuentoBoleta() + "\n"
                    + "Pago total: " + "$" + pagoFinal());

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Edad Tiene que ser de tipo numerico");
        } catch (Exception e) {
            System.out.println("Error, no se pudo imprimir boleta.");
        }
    }//GEN-LAST:event_butImprimirBoletaActionPerformed
    /**
     * Se define xx e yy como cordenadas de mouse
     */
    int xx, xy;

    /**
     * Toma las coordenadas del mouse presionado (Tab1)
     *
     * @param evt
     */
    private void informacionClientePaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_informacionClientePaneMousePressed
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_informacionClientePaneMousePressed
    /**
     * Se toman las cordenadas del mouse dragged esto genera que la ventana se
     * pueda mover con el mouse (Tab1)
     *
     * @param evt
     */
    private void informacionClientePaneMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_informacionClientePaneMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        setLocation(x - xx, y - xy);
    }//GEN-LAST:event_informacionClientePaneMouseDragged
    /**
     * Toma las coordenadas del mouse presionado (Tab2)
     *
     * @param evt
     */
    private void habitacionPaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_habitacionPaneMousePressed
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_habitacionPaneMousePressed
    /**
     * Se toman las cordenadas del mouse dragged esto genera que la ventana se
     * pueda mover con el mouse (Tab2)
     *
     * @param evt
     */
    private void habitacionPaneMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_habitacionPaneMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        setLocation(x - xx, y - xy);
    }//GEN-LAST:event_habitacionPaneMouseDragged
    /**
     * Toma las coordenadas del mouse presionado (Tab3)
     *
     * @param evt
     */
    private void serviciosPaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_serviciosPaneMousePressed
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_serviciosPaneMousePressed
    /**
     * Se toman las cordenadas del mouse dragged esto genera que la ventana se
     * pueda mover con el mouse (Tab3)
     *
     * @param evt
     */
    private void serviciosPaneMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_serviciosPaneMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        setLocation(x - xx, y - xy);
    }//GEN-LAST:event_serviciosPaneMouseDragged
    /**
     * Toma las coordenadas del mouse presionado (Tab4)
     *
     * @param evt
     */
    private void confirmacionPaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmacionPaneMousePressed
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_confirmacionPaneMousePressed
    /**
     * Se toman las cordenadas del mouse dragged esto genera que la ventana se
     * pueda mover con el mouse (Tab4)
     *
     * @param evt
     */
    private void confirmacionPaneMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmacionPaneMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        setLocation(x - xx, y - xy);
    }//GEN-LAST:event_confirmacionPaneMouseDragged
    /**
     * Si se selecciona el boton de habitación 1 esta queda seleccionada y el
     * resto se deshabilita
     *
     * @param evt
     */
    private void radioSelectH1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSelectH1ActionPerformed
        radioSelectH2.setSelected(false);
        radioSelectH3.setSelected(false);
        radioSelectH4.setSelected(false);
        radioSelectH1.setSelected(true);
        jdcInicioH2.setEnabled(false);
        jdcInicioH3.setEnabled(false);
        jdcInicioH4.setEnabled(false);
        jdcTerminoH2.setEnabled(false);
        jdcTerminoH3.setEnabled(false);
        jdcTerminoH4.setEnabled(false);
        jdcInicioH1.setEnabled(true);
        jdcTerminoH1.setEnabled(true);
    }//GEN-LAST:event_radioSelectH1ActionPerformed
    /**
     * Si se selecciona el boton de habitación 2 esta queda seleccionada y el
     * resto se deshabilita
     *
     * @param evt
     */
    private void radioSelectH2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSelectH2ActionPerformed
        radioSelectH1.setSelected(false);
        radioSelectH3.setSelected(false);
        radioSelectH4.setSelected(false);
        radioSelectH2.setSelected(true);
        jdcInicioH1.setEnabled(false);
        jdcInicioH3.setEnabled(false);
        jdcInicioH4.setEnabled(false);
        jdcTerminoH1.setEnabled(false);
        jdcTerminoH3.setEnabled(false);
        jdcTerminoH4.setEnabled(false);
        jdcInicioH2.setEnabled(true);
        jdcTerminoH2.setEnabled(true);
    }//GEN-LAST:event_radioSelectH2ActionPerformed
    /**
     * Si se selecciona el boton de habitación 3 esta queda seleccionada y el
     * resto se deshabilita
     *
     * @param evt
     */
    private void radioSelectH3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSelectH3ActionPerformed
        radioSelectH1.setSelected(false);
        radioSelectH2.setSelected(false);
        radioSelectH4.setSelected(false);
        radioSelectH3.setSelected(true);
        jdcInicioH1.setEnabled(false);
        jdcInicioH2.setEnabled(false);
        jdcInicioH4.setEnabled(false);
        jdcTerminoH1.setEnabled(false);
        jdcTerminoH2.setEnabled(false);
        jdcTerminoH4.setEnabled(false);
        jdcInicioH3.setEnabled(true);
        jdcTerminoH3.setEnabled(true);
    }//GEN-LAST:event_radioSelectH3ActionPerformed
    /**
     * Si se selecciona el boton de habitación 4 esta queda seleccionada y el
     * resto se deshabilita
     *
     * @param evt
     */
    private void radioSelectH4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSelectH4ActionPerformed
        radioSelectH1.setSelected(false);
        radioSelectH2.setSelected(false);
        radioSelectH3.setSelected(false);
        radioSelectH4.setSelected(true);
        jdcInicioH1.setEnabled(false);
        jdcInicioH2.setEnabled(false);
        jdcInicioH3.setEnabled(false);
        jdcTerminoH1.setEnabled(false);
        jdcTerminoH2.setEnabled(false);
        jdcTerminoH3.setEnabled(false);
        jdcInicioH4.setEnabled(true);
        jdcTerminoH4.setEnabled(true);
    }//GEN-LAST:event_radioSelectH4ActionPerformed
    /**
     * Botón que toma TODOS los campos de registroMenu y actualiza los datos del
     * cliente tomando de identificador el rut
     *
     * @param evt
     */
    private void burModificarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_burModificarClienteActionPerformed
        try {
            conexion con = new conexion();
            Huesped huesped = new Huesped();
            Habitacion habitacion = new Habitacion();

            int cancelButton = JOptionPane.showConfirmDialog(
                    null,
                    "¿Seguro que quieres modificar al huesped?",
                    "ADVERTENCIA",
                    JOptionPane.YES_NO_OPTION);
            if (cancelButton == JOptionPane.YES_OPTION && (con.disponibilidadHabitacion(habitacion()).isDisponibilidad() == true || con.disponibilidadHabitacion(habitacion()).isDisponibilidad() == false)) {
                Habitacion habitacion1 = con.buscarHabitacion(txtRutPasaporte.getText());

                //cuando se elimina un cliente, se cambia el estado de una habitacion
                habitacion1.setDisponibilidad(true);
                habitacion1.setFechaInicio("----");
                habitacion1.setFechaTermino("----");
                habitacion1.setCantidadDias("0");
                con.estadoHabitacion(habitacion1);

                //Si encuentra al cliente, entrará en el if y modificará sus datos
                if (con.eliminarRutBoleta(txtRutPasaporte.getText()) != 0 && con.eliminarRut(txtRutPasaporte.getText()) != 0) {
                    huesped.setRut(txtRutPasaporte.getText());
                    huesped.setNombre(txtNombre.getText());
                    huesped.setApellido(txtApellido.getText());
                    huesped.setEdad(Integer.valueOf(txtEdad.getText()));
                    huesped.setSexo(sexo().getSexo());
                    huesped.setTipoHuesped(tipo().getTipoHuesped());
                    huesped.setCorreo(txtCorreo.getText());
                    huesped.setNumeroTelefono(txtTelefono.getText());
                    huesped.setPais(listPaises.getSelectedItem().toString());
                    huesped.setAcompannantes(Integer.valueOf(listAcompanante.getSelectedItem().toString()));

                    habitacion.setNumeroHabitacion(habitacion());
                    habitacion.setDisponibilidad(false);
                    habitacion.setFechaInicio(fechaInicio());
                    habitacion.setFechaTermino(fechaTermino());
                    habitacion.setCantidadDias(cantidadDias());
                    //inserté la info en tabla huesped y boleta, también cambio el estado de habitacion.
                    con.insertar(huesped);
                    con.estadoHabitacion(habitacion);
                    con.insertarBoleta(huesped, habitacion, pagoSinDescuento(), pagoConDescuento(), pagoFinal());

                    //Mensaje de éxito
                    JOptionPane.showMessageDialog(null, "Modificacion exitosa");
                    this.dispose();
                    menuSys sys2 = new menuSys();
                    sys2.setVisible(true);
                } else if (cancelButton == JOptionPane.NO_OPTION) {

                    remove(cancelButton);
                }
            } else {
                //Mensaje de error de modificacion, el cual no permite enviar a un huesped a una habitación ocupada
                JOptionPane.showMessageDialog(null, "No se pudo modificar cliente, habitacion ocupada");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_burModificarClienteActionPerformed

    /**
     * Botón que toma TODOS los campos de registroMenu e ingresa los datos del
     * cliente a la base de datos, tambien crea una boleta y finalmente
     * actualiza el estadod e la habitación a ocupado
     *
     * @param evt
     */
    private void butRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRegistrarActionPerformed
        try {
            conexion con = new conexion();
            Huesped huesped = new Huesped();
            Habitacion habitacion = new Habitacion();

            int cancelButton = JOptionPane.showConfirmDialog(
                    null,
                    "¿Seguro que quieres registrar al huesped?",
                    "ADVERTENCIA",
                    JOptionPane.YES_NO_OPTION);
            if (cancelButton == JOptionPane.YES_OPTION) {

                if (con.disponibilidadHabitacion(habitacion()).isDisponibilidad() == true) {
                    if (txtRutPasaporte.getText().length() >= 1 && txtRutPasaporte.getText().length() <= 10 && txtNombre.getText().length() >= 1 && txtApellido.getText().length() >= 1
                            && Integer.valueOf(txtEdad.getText()) >= 18 && txtCorreo.getText().length() >= 1 && txtTelefono.getText().length() >= 1) {
                        //extraigo la info de los paneles
                        huesped.setRut(txtRutPasaporte.getText());
                        huesped.setNombre(txtNombre.getText());
                        huesped.setApellido(txtApellido.getText());
                        huesped.setEdad(Integer.valueOf(txtEdad.getText()));
                        huesped.setSexo(sexo().getSexo());
                        huesped.setTipoHuesped(tipo().getTipoHuesped());
                        huesped.setCorreo(txtCorreo.getText());
                        huesped.setNumeroTelefono(txtTelefono.getText());
                        huesped.setPais(listPaises.getSelectedItem().toString());
                        huesped.setAcompannantes(Integer.valueOf(listAcompanante.getSelectedItem().toString()));

                        habitacion.setNumeroHabitacion(habitacion());
                        habitacion.setDisponibilidad(false);

                        habitacion.setFechaInicio(fechaInicio());
                        habitacion.setFechaTermino(fechaTermino());
                        habitacion.setCantidadDias(cantidadDias());
                        //inserté la info en tabla huesped y boleta, también cambio el estado de habitacion.
                        con.insertar(huesped);
                        con.estadoHabitacion(habitacion);
                        con.insertarBoleta(huesped, habitacion, pagoSinDescuento(), pagoConDescuento(), pagoFinal());
                        //Mensaje de éxito
                        JOptionPane.showMessageDialog(null, "Registro Ingresado");
                        menuSys sys3 = new menuSys();
                        sys3.setVisible(true);
                        this.dispose();
                    } else {
                        //Error que avisa que hay un campo mal escrito o no ingresado
                        JOptionPane.showMessageDialog(null, "Valores invalidos, porfavor rellene correctamente cada campo \n(No se puede registrar a menor de 18 años)");
                    }

                } else {
                    //Error que señala que la habitacion seleccionada está ocupada
                    JOptionPane.showMessageDialog(null, "No se pudo registrar el cliente, habitación ocupada o no seleccionada");
                }
                if (cancelButton == JOptionPane.NO_OPTION) {

                    remove(cancelButton);
                }
            }
        } catch (NumberFormatException e) {
            //Error especifico para edad, el cual avisa al intentar registrar que el campo de edad está vacío o con letras
            JOptionPane.showMessageDialog(null, "ERROR: Revisa que los datos sean correctos");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_butRegistrarActionPerformed

    /**
     * Método que se utiliza para imprimir la edad en boleta
     *
     * @return
     */
    public String edad() {
        int edad1 = Integer.parseInt(txtEdad.getText());
        if (edad1 >= 18) {
            return edad1 + "";
        } else {
            return "Edad no valida";
        }
    }

    /**
     * Metodo que define el String de la seleccion de femenino y masculino (para
     * imprimir boleta)
     *
     * @return
     */
    public Persona sexo() throws Exception {
        Persona sexo = new Persona() {
            @Override
            public void informacionPersona() {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        };
        if (radioFemenino.isSelected()) {
            sexo.setSexo("Femenino");
        } else if (radioMasculino.isSelected()) {
            sexo.setSexo("Masculino");
        } else {
            sexo.setSexo("");
        }
        return sexo;
    }

    /**
     * Método que se utiliza para obtener el sexo en el registro y que va a la
     * base de datos
     *
     * @return
     */
    public String sexo1() {
        if (radioFemenino.isSelected()) {
            return ("Femenino");
        }
        if (radioMasculino.isSelected()) {
            return ("Masculino");
        } else {
            return ("NONE");
        }
    }

    /**
     * Metodo que obtiene el tipo de huesped contenido en un oibjeto Huesped,
     * para luego ser utilizado en el registro y finalmente ser guardado en la
     * base de datos
     *
     * @return
     * @throws Exception
     */
    public Huesped tipo() throws Exception {
        Huesped huesped = new Huesped();
        if (radioParticular.isSelected()) {
            huesped.setTipoHuesped("Particular");
        } else if (radioEmpresa.isSelected()) {
            huesped.setTipoHuesped("Empresa");
        } else {
            huesped.setTipoHuesped("");
        }
        return huesped;
    }

    /**
     * Metodo que define el String de la seleccion de particular y empresa (para
     * imprimir boleta)
     *
     * @return
     */
    public String tipo1() {
        if (radioParticular.isSelected()) {
            return ("Particular");
        }
        if (radioEmpresa.isSelected()) {
            return ("Empresa");
        } else {
            return ("NONE");
        }

    }
    /**
     * Metodo que define el String y valor de la seleccion de las noches y
     * fechas de inicio y termino(para imprimir boleta)
     *
     * @return
     */
    int noches = 1;

    public String fechasBoleta() {
        String formato = "dd-MM-YYYY";
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(formato);

        if (jdcInicioH1.isEnabled() && jdcInicioH2.isEnabled() && jdcInicioH3.isEnabled() && jdcInicioH4.isEnabled()) {
            noches = 1;
            return ("Duración: Habitacion no seleccionada");
        }
        if (jdcInicioH1.isEnabled() && jdcTerminoH1.isEnabled()) {
            Calendar inicio = jdcInicioH1.getCalendar();
            Calendar termino = jdcTerminoH1.getCalendar();
            noches = -1;
            while (inicio.before(termino) || inicio.equals(termino)) {
                noches++;
                inicio.add(Calendar.DATE, 1);
            }
            String inicio1 = simpleDateFormat.format(jdcInicioH1.getDate());
            String termino1 = simpleDateFormat.format(jdcTerminoH1.getDate());
            if (noches >= 0) {
                return ("Inicio: " + inicio1 + "\n" + "Termino: " + termino1 + "\n" + "Dias: " + noches);
            } else {
                return "Inicio: " + "ERROR" + "\n" + "Termino: " + "ERROR" + "\n" + "Dias: " + "Error, La fecha de inicio es posterior a la de termino";
            }
        }
        if (jdcInicioH2.isEnabled() && jdcTerminoH2.isEnabled()) {
            Calendar inicio = jdcInicioH2.getCalendar();
            Calendar termino = jdcTerminoH2.getCalendar();
            noches = -1;
            while (inicio.before(termino) || inicio.equals(termino)) {
                noches++;
                inicio.add(Calendar.DATE, 1);
            }
            String inicio2 = simpleDateFormat.format(jdcInicioH2.getDate());
            String termino2 = simpleDateFormat.format(jdcTerminoH2.getDate());
            if (noches >= 0) {
                return ("Inicio: " + inicio2 + "\n" + "Termino: " + termino2 + "\n" + "Dias: " + noches);
            } else {
                return "Inicio: " + "ERROR" + "\n" + "Termino: " + "ERROR" + "\n" + "Dias: " + "Error, La fecha de inicio es posterior a la de termino";
            }

        }
        if (jdcInicioH3.isEnabled() && jdcTerminoH3.isEnabled()) {
            Calendar inicio = jdcInicioH3.getCalendar();
            Calendar termino = jdcTerminoH3.getCalendar();
            noches = -1;
            while (inicio.before(termino) || inicio.equals(termino)) {
                noches++;
                inicio.add(Calendar.DATE, 1);
            }
            String inicio3 = simpleDateFormat.format(jdcInicioH3.getDate());
            String termino3 = simpleDateFormat.format(jdcTerminoH3.getDate());
            if (noches >= 0) {
                return ("Inicio: " + inicio3 + "\n" + "Termino: " + termino3 + "\n" + "Dias: " + noches);
            } else {
                return "Inicio: " + "ERROR" + "\n" + "Termino: " + "ERROR" + "\n" + "Dias: " + "Error, La fecha de inicio es posterior a la de termino";
            }
        }
        if (jdcInicioH4.isEnabled() && jdcTerminoH4.isEnabled()) {
            Calendar inicio = jdcInicioH4.getCalendar();
            Calendar termino = jdcTerminoH4.getCalendar();
            noches = -1;
            while (inicio.before(termino) || inicio.equals(termino)) {
                noches++;
                inicio.add(Calendar.DATE, 1);
            }
            String inicio4 = simpleDateFormat.format(jdcInicioH4.getDate());
            String termino4 = simpleDateFormat.format(jdcTerminoH4.getDate());
            if (noches >= 0) {
                return ("Inicio: " + inicio4 + "\n" + "Termino: " + termino4 + "\n" + "Dias: " + noches);
            } else {
                return "Inicio: " + "ERROR" + "\n" + "Termino: " + "ERROR" + "\n" + "Dias: " + "Error, La fecha de inicio es posterior a la de termino";
            }
        } else {
            return ("Inicio: NONE" + "\n" + "Termino: NONE");
        }
    }

    /**
     * Metodo que define el String y valor de la seleccion de las habitaciones
     * (para imprimir boleta)
     *
     * @return
     */
    int precioHabitacion = 0;

    public String habitacion() {
        if (radioSelectH1.isSelected()) {
            precioHabitacion = 70000;
            return ("A101");
        }
        if (radioSelectH2.isSelected()) {
            precioHabitacion = 90000;
            return ("A102");
        }
        if (radioSelectH3.isSelected()) {
            precioHabitacion = 100000;
            return ("B201");
        }
        if (radioSelectH4.isSelected()) {
            precioHabitacion = 120000;
            return ("B202");
        } else {
            precioHabitacion = 0;
            return ("NONE");
        }
    }

    /**
     * Metodo que define el String y valor de la seleccion de los servicios
     * (para imprimir boleta)
     *
     * @return
     */
    int precioServicio = 0;

    public String servicio() {
        if (radioServicio1.isSelected() && radioServicio2.isSelected() && radioServicio3.isSelected() && radioServicio4.isSelected()) {
            precioServicio = 420000;
            return ("Servicios Extra: -Servicio a la Habitación" + "\n" + "                         -Masajería"
                    + "\n" + "                         -Cena" + "\n" + "                         -buceo");
        }
        if (radioServicio1.isSelected() && radioServicio2.isSelected() && radioServicio3.isSelected()) {
            precioServicio = 350000;
            return ("Servicios Extra: -Servicio a la Habitación" + "\n" + "                         -Masajería"
                    + "\n" + "                         -Cena");
        }
        if (radioServicio4.isSelected() && radioServicio2.isSelected() && radioServicio3.isSelected()) {
            precioServicio = 220000;
            return ("Servicios Extra: -Masajería" + "\n" + "                         -Cena" + "\n" + "                         -Buceo");
        }
        if (radioServicio1.isSelected() && radioServicio2.isSelected() && radioServicio4.isSelected()) {
            precioServicio = 320000;
            return ("Servicios Extra: -Servicio a la Habitación" + "\n" + "                         -Masajería" + "\n" + "                         -Buceo");
        }
        if (radioServicio1.isSelected() && radioServicio3.isSelected() && radioServicio4.isSelected()) {
            precioServicio = 370000;
            return ("Servicios Extra: -Servicio a la Habitación" + "\n" + "                         -Cena" + "\n" + "                         -Buceo");
        }
        if (radioServicio1.isSelected() && radioServicio2.isSelected()) {
            precioServicio = 250000;
            return ("Servicios Extra: -Servicio a la Habitación" + "\n" + "                         -Masajería");
        }
        if (radioServicio1.isSelected() && radioServicio3.isSelected()) {
            precioServicio = 300000;
            return ("Servicios Extra: -Servicio a la Habitación" + "\n" + "                         -Cena");
        }
        if (radioServicio1.isSelected() && radioServicio4.isSelected()) {
            precioServicio = 270000;
            return ("Servicios Extra: -Servicio a la Habitación" + "\n" + "                         -Buceo");
        }
        if (radioServicio2.isSelected() && radioServicio3.isSelected()) {
            precioServicio = 150000;
            return ("Servicios Extra: -Masajería" + "\n" + "                         -Cena");
        }
        if (radioServicio2.isSelected() && radioServicio4.isSelected()) {
            precioServicio = 120000;
            return ("Servicios Extra: -Masajería" + "\n" + "                         -Buceo");
        }
        if (radioServicio3.isSelected() && radioServicio4.isSelected()) {
            precioServicio = 170000;
            return ("Servicios Extra: -Cena" + "\n" + "                         -Buceo");
        }
        if (radioServicio1.isSelected()) {
            precioServicio = 200000;
            return ("Servicios Extra: Servicio a la Habitación");
        }
        if (radioServicio2.isSelected()) {
            precioServicio = 50000;
            return ("Servicios Extra: Masajería");
        }
        if (radioServicio3.isSelected()) {
            precioServicio = 100000;
            return ("Servicios Extra: Cena");
        }
        if (radioServicio4.isSelected()) {
            precioServicio = 70000;
            return ("Servicios Extra: Buceo");
        } else {
            precioServicio = 0;
            return ("Servicios Extra: NONE");
        }
    }

    /**
     * Metodo que define el String y valor de la seleccion de los servicios
     * (para imprimir boleta)
     *
     * @return
     */
    public Integer precioServicio() {
        if (radioServicio1.isSelected() && radioServicio2.isSelected() && radioServicio3.isSelected() && radioServicio4.isSelected()) {
            precioServicio = 420000;
            return (precioServicio);
        }
        if (radioServicio1.isSelected() && radioServicio2.isSelected() && radioServicio3.isSelected()) {
            precioServicio = 350000;
            return (precioServicio);
        }
        if (radioServicio4.isSelected() && radioServicio2.isSelected() && radioServicio3.isSelected()) {
            precioServicio = 220000;
            return (precioServicio);
        }
        if (radioServicio1.isSelected() && radioServicio2.isSelected() && radioServicio4.isSelected()) {
            precioServicio = 320000;
            return (precioServicio);
        }
        if (radioServicio1.isSelected() && radioServicio3.isSelected() && radioServicio4.isSelected()) {
            precioServicio = 370000;
            return (precioServicio);
        }
        if (radioServicio1.isSelected() && radioServicio2.isSelected()) {
            precioServicio = 250000;
            return (precioServicio);
        }
        if (radioServicio1.isSelected() && radioServicio3.isSelected()) {
            precioServicio = 300000;
            return (precioServicio);
        }
        if (radioServicio1.isSelected() && radioServicio4.isSelected()) {
            precioServicio = 270000;
            return (precioServicio);
        }
        if (radioServicio2.isSelected() && radioServicio3.isSelected()) {
            precioServicio = 150000;
            return (precioServicio);
        }
        if (radioServicio2.isSelected() && radioServicio4.isSelected()) {
            precioServicio = 120000;
            return (precioServicio);
        }
        if (radioServicio3.isSelected() && radioServicio4.isSelected()) {
            precioServicio = 170000;
            return (precioServicio);
        }
        if (radioServicio1.isSelected()) {
            precioServicio = 200000;
            return (precioServicio);
        }
        if (radioServicio2.isSelected()) {
            precioServicio = 50000;
            return (precioServicio);
        }
        if (radioServicio3.isSelected()) {
            precioServicio = 100000;
            return (precioServicio);
        }
        if (radioServicio4.isSelected()) {
            precioServicio = 70000;
            return (precioServicio);
        } else {
            precioServicio = 0;
            return precioServicio;
        }
    }

    /**
     * Metodo que calcula el valor Bruto (para imprimir boleta)
     *
     * @return
     */
    int precioBruto;
    int precioDescuento;

    public Integer pagoSinDescuento() {
        precioBruto = (precioHabitacion * noches) + precioServicio();
        return precioBruto;
    }

    /**
     * Metodo que calcula el valor con descuento (para imprimir boleta)
     *
     * @return
     */
    public Integer pagoConDescuento() {
        if (radioEmpresa.isSelected()) {
            precioDescuento = (int) ((int) precioBruto - (precioBruto * 0.2));
            return precioDescuento;
        } else {
            return 0;
        }
    }

    /**
     * Método que retorno con descuento para la boleta (verifica que la fecha
     * inicial sea mayor que la final)
     *
     * @return
     */
    public String pagoConDescuentoBoleta() {
        if (radioEmpresa.isSelected()) {
            precioDescuento = (int) ((int) precioBruto - (precioBruto * 0.15));
            return ("$" + precioDescuento);
        } else {
            return ("Descuento no aplica");
        }
    }

    /**
     * Metodo que calcula el valor final (para imprimir boleta)
     *
     * @return
     */
    public Integer pagoFinal() {
        if (radioEmpresa.isSelected()) {
            precioDescuento = (int) ((int) precioBruto - (precioBruto * 0.15));
            return precioDescuento;
        } else {
            return precioBruto;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registroMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registroMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registroMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registroMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registroMenu().setVisible(true);

            }
        });
    }

    /**
     * Método que retorna la fecha de inicio que se guarda en registro y lo
     * manda a la base de datos
     *
     * @return
     */
    public String fechaInicio() {

        String str = "----";

        if (radioSelectH1.isSelected()) {
            int anno = jdcInicioH1.getCalendar().get(Calendar.YEAR);
            int mes = jdcInicioH1.getCalendar().get(Calendar.MONTH);
            int dia = jdcInicioH1.getCalendar().get(Calendar.DAY_OF_MONTH);
            str = anno + "/" + mes + "/" + dia;
        }
        if (radioSelectH2.isSelected()) {
            int anno = jdcInicioH2.getCalendar().get(Calendar.YEAR);
            int mes = jdcInicioH2.getCalendar().get(Calendar.MONTH);
            int dia = jdcInicioH2.getCalendar().get(Calendar.DAY_OF_MONTH);
            str = anno + "/" + mes + "/" + dia;
        }
        if (radioSelectH3.isSelected()) {
            int anno = jdcInicioH3.getCalendar().get(Calendar.YEAR);
            int mes = jdcInicioH3.getCalendar().get(Calendar.MONTH);
            int dia = jdcInicioH3.getCalendar().get(Calendar.DAY_OF_MONTH);
            str = anno + "/" + mes + "/" + dia;
        }
        if (radioSelectH4.isSelected()) {
            int anno = jdcInicioH4.getCalendar().get(Calendar.YEAR);
            int mes = jdcInicioH4.getCalendar().get(Calendar.MONTH);
            int dia = jdcInicioH4.getCalendar().get(Calendar.DAY_OF_MONTH);
            str = anno + "/" + mes + "/" + dia;
        }

        return str;
    }

    /**
     * Método que retorna la fecha de termino que se guarda en registro y lo
     * manda a la base de datos
     *
     * @return
     */
    public String fechaTermino() {

        String str = "NONE";

        if (radioSelectH1.isSelected()) {
            int anno = jdcTerminoH1.getCalendar().get(Calendar.YEAR);
            int mes = jdcTerminoH1.getCalendar().get(Calendar.MONTH);
            int dia = jdcTerminoH1.getCalendar().get(Calendar.DAY_OF_MONTH);
            str = anno + "/" + mes + "/" + dia;
        }
        if (radioSelectH2.isSelected()) {
            int anno = jdcTerminoH2.getCalendar().get(Calendar.YEAR);
            int mes = jdcTerminoH2.getCalendar().get(Calendar.MONTH);
            int dia = jdcTerminoH2.getCalendar().get(Calendar.DAY_OF_MONTH);
            str = anno + "/" + mes + "/" + dia;

        }
        if (radioSelectH3.isSelected()) {
            int anno = jdcTerminoH3.getCalendar().get(Calendar.YEAR);
            int mes = jdcTerminoH3.getCalendar().get(Calendar.MONTH);
            int dia = jdcTerminoH3.getCalendar().get(Calendar.DAY_OF_MONTH);
            str = anno + "/" + mes + "/" + dia;

        }
        if (radioSelectH4.isSelected()) {
            int anno = jdcTerminoH4.getCalendar().get(Calendar.YEAR);
            int mes = jdcTerminoH4.getCalendar().get(Calendar.MONTH);
            int dia = jdcTerminoH4.getCalendar().get(Calendar.DAY_OF_MONTH);
            str = anno + "/" + mes + "/" + dia;
        }

        return str;
    }

    /**
     * Variable para método cantidadDias()
     */
    int nochesEstadia = 1;

    /**
     * Método que se utiliza en imprimir boleta y registrar clientes, el cual
     * retorna nocheEstadia, que corresponderia a la resta entre fecha de inicio
     * y termino, para indicar la cantidad de día de estadía.
     *
     * @return
     */
    public String cantidadDias() {
        if (jdcInicioH1.isEnabled() && jdcInicioH2.isEnabled() && jdcInicioH3.isEnabled() && jdcInicioH4.isEnabled()) {
            nochesEstadia = 1;
            return nochesEstadia + "";
        }
        if (jdcInicioH1.isEnabled() && jdcTerminoH1.isEnabled()) {
            Calendar inicio = jdcInicioH1.getCalendar();
            Calendar termino = jdcTerminoH1.getCalendar();
            nochesEstadia = -1;
            while (inicio.before(termino) || inicio.equals(termino)) {
                nochesEstadia++;
                inicio.add(Calendar.DATE, 1);
            }

            return nochesEstadia + "";
        }
        if (jdcInicioH2.isEnabled() && jdcTerminoH2.isEnabled()) {
            Calendar inicio = jdcInicioH2.getCalendar();
            Calendar termino = jdcTerminoH2.getCalendar();
            nochesEstadia = -1;
            while (inicio.before(termino) || inicio.equals(termino)) {
                nochesEstadia++;
                inicio.add(Calendar.DATE, 1);
            }

            return nochesEstadia + "";
        }
        if (jdcInicioH3.isEnabled() && jdcTerminoH3.isEnabled()) {
            Calendar inicio = jdcInicioH3.getCalendar();
            Calendar termino = jdcTerminoH3.getCalendar();
            nochesEstadia = -1;
            while (inicio.before(termino) || inicio.equals(termino)) {
                nochesEstadia++;
                inicio.add(Calendar.DATE, 1);
            }

            return nochesEstadia + "";
        }
        if (jdcInicioH4.isEnabled() && jdcTerminoH4.isEnabled()) {
            Calendar inicio = jdcInicioH4.getCalendar();
            Calendar termino = jdcTerminoH4.getCalendar();
            nochesEstadia = -1;
            while (inicio.before(termino) || inicio.equals(termino)) {
                nochesEstadia++;
                inicio.add(Calendar.DATE, 1);
            }

            return nochesEstadia + "";
        } else {
            return null;
        }
    }

    /**
     *
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton burModificarCliente;
    public javax.swing.JButton butAtras;
    public javax.swing.JButton butAtras1;
    public javax.swing.JButton butAtras2;
    public javax.swing.JButton butCancelarRegistro;
    public javax.swing.JButton butCancelarRegistro1;
    public javax.swing.JButton butCancelarRegistro2;
    public javax.swing.JButton butCancelarRegistro3;
    public javax.swing.JButton butCerrarIngre1;
    public javax.swing.JButton butCerrarIngre3;
    public javax.swing.JButton butCerrarIngre4;
    public javax.swing.JButton butCerrarIngre5;
    public javax.swing.JButton butImprimirBoleta;
    public javax.swing.JButton butMinimizarIngre1;
    public javax.swing.JButton butMinimizarIngre3;
    public javax.swing.JButton butMinimizarIngre4;
    public javax.swing.JButton butMinimizarIngre5;
    public javax.swing.JButton butRegistrar;
    public javax.swing.JButton butSiguiente1;
    public javax.swing.JButton butSiguiente2;
    public javax.swing.JButton butSiguiente3;
    public javax.swing.JPanel confirmacionPane;
    public javax.swing.JLabel descripcionS1;
    public javax.swing.JLabel descripcionS1_1;
    public javax.swing.JLabel descripcionS2;
    public javax.swing.JLabel descripcionS3;
    public javax.swing.JLabel descripcionS3_1;
    public javax.swing.JLabel descripcionS4;
    public javax.swing.JLabel descripcionS4_1;
    public javax.swing.JLabel descripcionS5;
    public javax.swing.JPanel habitacionPane;
    public javax.swing.JLabel imageHabitacion1;
    public javax.swing.JLabel imageHabitacion2;
    public javax.swing.JLabel imageHabitacion3;
    public javax.swing.JLabel imageHabitacion4;
    public javax.swing.JLabel imageServicio1;
    public javax.swing.JLabel imageServicio2;
    public javax.swing.JLabel imageServicio3;
    public javax.swing.JLabel imageServicio4;
    public javax.swing.JPanel informacionClientePane;
    public javax.swing.JLabel informacionS1;
    public javax.swing.JLabel informacionS2;
    public javax.swing.JLabel informacionS3;
    public javax.swing.JLabel informacionS4;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JLabel jLabel8;
    public javax.swing.JScrollPane jScrollPane1;
    public com.toedter.calendar.JDateChooser jdcInicioH1;
    public com.toedter.calendar.JDateChooser jdcInicioH2;
    public com.toedter.calendar.JDateChooser jdcInicioH3;
    public com.toedter.calendar.JDateChooser jdcInicioH4;
    public com.toedter.calendar.JDateChooser jdcTerminoH1;
    public com.toedter.calendar.JDateChooser jdcTerminoH2;
    public com.toedter.calendar.JDateChooser jdcTerminoH3;
    public com.toedter.calendar.JDateChooser jdcTerminoH4;
    public javax.swing.JLabel labelApellidoCliente;
    public javax.swing.JLabel labelCodigoP;
    public javax.swing.JLabel labelContenidoH1;
    public javax.swing.JLabel labelContenidoH2;
    public javax.swing.JLabel labelContenidoH3;
    public javax.swing.JLabel labelContenidoH4;
    public javax.swing.JLabel labelCorreoElectronico;
    public javax.swing.JLabel labelEdad;
    public javax.swing.JLabel labelHabitacion1;
    public javax.swing.JLabel labelHabitacion2;
    public javax.swing.JLabel labelHabitacion3;
    public javax.swing.JLabel labelHabitacion4;
    public javax.swing.JLabel labelInfoH1;
    public javax.swing.JLabel labelInfoH2;
    public javax.swing.JLabel labelInfoH3;
    public javax.swing.JLabel labelInfoH4;
    public javax.swing.JLabel labelInicio1;
    public javax.swing.JLabel labelInicio2;
    public javax.swing.JLabel labelInicio3;
    public javax.swing.JLabel labelInicio4;
    public javax.swing.JLabel labelNombre;
    public javax.swing.JLabel labelNombreS1;
    public javax.swing.JLabel labelNombreS2;
    public javax.swing.JLabel labelNombreS3;
    public javax.swing.JLabel labelNombreS4;
    public javax.swing.JLabel labelPais;
    public javax.swing.JLabel labelRut;
    public javax.swing.JLabel labelSexo;
    public javax.swing.JLabel labelTelefono;
    public javax.swing.JLabel labelTermino1;
    public javax.swing.JLabel labelTermino2;
    public javax.swing.JLabel labelTermino3;
    public javax.swing.JLabel labelTermino4;
    public javax.swing.JLabel labelTipoCliente;
    public javax.swing.JComboBox<String> listAcompanante;
    public javax.swing.JComboBox<String> listPaises;
    public javax.swing.JLabel logoTrans;
    public javax.swing.JLabel logoTrans1;
    public javax.swing.JLabel logoTrans3;
    public javax.swing.JLabel logoTrans4;
    public javax.swing.JRadioButton radioEmpresa;
    public javax.swing.JRadioButton radioFemenino;
    public javax.swing.JRadioButton radioMasculino;
    public javax.swing.JRadioButton radioParticular;
    public javax.swing.JRadioButton radioSelectH1;
    public javax.swing.JRadioButton radioSelectH2;
    public javax.swing.JRadioButton radioSelectH3;
    public javax.swing.JRadioButton radioSelectH4;
    public javax.swing.JRadioButton radioServicio1;
    public javax.swing.JRadioButton radioServicio2;
    public javax.swing.JRadioButton radioServicio3;
    public javax.swing.JRadioButton radioServicio4;
    public javax.swing.JTabbedPane registroCliente;
    public javax.swing.JPanel serviciosPane;
    public javax.swing.JTextField txtApellido;
    public javax.swing.JTextField txtCorreo;
    public javax.swing.JTextPane txtDatos;
    public javax.swing.JTextField txtEdad;
    public javax.swing.JTextField txtNombre;
    public javax.swing.JTextField txtRutPasaporte;
    public javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
